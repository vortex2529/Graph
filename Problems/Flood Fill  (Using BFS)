class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        vector<vector<int>> vec = image;

        int n = image.size();
        int m = image[0].size();
        queue<pair<pair<int,int>,int>>q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i == sr && j == sc){
                    q.push({{i,j},vec[i][j]});
                    vec[i][j] = color;
                }
            }
        }

        int dr[] = {-1,0,1,0};
        int dc[] = {0,1,0,-1};

        while(!q.empty()){
            auto front = q.front();q.pop();
            int r = front.first.first;
            int c = front.first.second;
            int currcolor = front.second;

            for(int i=0;i<4;i++){
                int nrow = r + dr[i];
                int ncol = c + dc[i];

                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && image[nrow][ncol]== currcolor &&vec[nrow][ncol] != color ){
                    q.push({{nrow,ncol},vec[nrow][ncol]});
                    vec[nrow][ncol] = color;
                }
            }
        }

        
        return vec;
    }
};
