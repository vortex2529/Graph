class Solution {
public:
    bool dfs(int node,vector<bool> &vis,vector<bool> &dfsVis,vector<int>adj[]){
        vis[node] = true;
        dfsVis[node] = true;
        for(auto nbr:adj[node]){
            if(!vis[nbr]){
                if(dfs(nbr,vis,dfsVis,adj) == false) return false;
            }
            else{
                if(dfsVis[nbr]==true) return false;
            }
        }
        dfsVis[node] = false;
        return true;
    }
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int n = numCourses;
        vector<int> adj[n];
        for(auto e: prerequisites){
            int u = e[0];
            int v = e[1];
            
            adj[u].push_back(v);
        }
        vector<bool>dfsVis(n,false);
        vector<bool> vis(n,false);
        for(int i=0;i<n;i++){
            if(!vis[i]){
                if(dfs(i,vis,dfsVis,adj) == false) return false;
            }
        }
        return true;
    }
};
