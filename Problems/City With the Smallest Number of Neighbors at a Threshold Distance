// User function Template for C++
class Solution {
  public:
    int findCity(int n, int m, vector<vector<int>>& edges, int distanceThreshold) {
        
        vector<vector<int>> dist(n,vector<int>(n,1e9));
        for(auto e:edges){
            dist[e[0]][e[1]] = e[2];
            dist[e[1]][e[0]] = e[2];
        }
        
        for(int i=0;i<n;i++) dist[i][i] = 0;
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(dist[i][k] != 1e9 && dist[k][j] != 1e9){
                        dist[i][j] = min(dist[i][j], dist[i][k]+dist[k][j]);
                    }
                }
            }
        }
        
        
        int citycnt = n;
        int cityNo = -1;
        
        for(int city=0;city<n;city++){
            int cnt = 0;
            for(int adjcity=0;adjcity<n;adjcity++){
                if(dist[city][adjcity] <= distanceThreshold) cnt++;
            }
            
            if(cnt <= citycnt){
                citycnt = cnt;
                cityNo = city;
            }
        }
        
        return cityNo;
        
        
        
    }
};
