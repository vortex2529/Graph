class Solution {
public:
    void dfs(int src,vector<bool>&vis,vector<int> adj[]){
        vis[src] = true;
        for(auto nbr:adj[src]){
            if(!vis[nbr]){
                dfs(nbr,vis,adj);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<int> adj[n+1];


        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j] == 1){
                    adj[i+1].push_back(j+1);
                    adj[j+1].push_back(i+1);
                }
            }
        }
        int count = 0;
        vector<bool> vis(n+1,false);
        for(int i=1;i<=n;i++){
            if(!vis[i]){
                dfs(i,vis,adj);
                count++;
            }
        }
        return count;
    }
};
