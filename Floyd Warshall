// User function template for C++

class Solution {
  public:
    void floydWarshall(vector<vector<int>> &dist) {
        int n = dist.size();
        
       
        for(int helper=0;helper<n;helper++){
            for(int src=0;src<n;src++){
                for(int dst=0;dst<n;dst++){
                    if(dist[src][helper] != 1e8 && dist[helper][dst] != 1e8){
                        dist[src][dst] = min(dist[src][dst], dist[src][helper]+dist[helper][dst]);
                    }
                    
                }
            }
        }
        
        
        // to detect -ve cycle
        // for(int i=0;i<n;i++) if(dist[i][i] < 0) cout<<"-ve cycle present";
        
       
        
    }
};
